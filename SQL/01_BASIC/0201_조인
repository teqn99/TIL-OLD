# Oracle SQL Developer

[함수의 순서]
5. select  컬럼선택
1. from    테이블
2. where   행 조건
3. group by 그룹 기준 칼럼
4. having 그룹 선택 조건
6. order by 정렬



[조인(JOIN)]
- 2개 이상의 테이블에 있는 컬럼들을 합쳐서 가상의 테이블을 만들어 조회하는 방식을 말한다.
 	- 소스테이블 : 내가 먼저 읽어야 한다고 생각하는 테이블 -> 메인 데이터 테이블
	- 타겟테이블 : 소스를 읽은 후 소스에 조인할 대상이 되는 테이블 -> 추가정보 / 부가정보
	ex)
	 id가 100인 직원의 ID와 이름, 연봉, 부서이름, 부서위치 : 소스-직원, 타겟-부서
  	 id가 100인 부서의 이름, 위치, 소속직원의 이름, 연볼 : 소스-부서, 타겟-직원
 
- 각 테이블을 어떻게 합칠지를 표현하는 것을 조인 연산이라고 한다.
    - 조인 연산에 따른 조인종류
        - Equi join , non-equi join
	
- 조인의 종류
    - Inner Join (교집합 개념)
        - 양쪽 테이블에서 조인 조건을 만족하는 행들만 합친다. 
    - Outer Join (합집합 개념)
        - 한쪽 테이블의 행들을 모두 사용하고 다른 쪽 테이블은 조인 조건을 만족하는 행만 합친다. 조인조건을 만족하는 행이 없는 경우 NULL을 합친다.
        - 종류 : Left Outer Join,  Right Outer Join, Full Outer Join
    - Cross Join (안나오는 게 좋은 것)
        - 두 테이블의 곱집합을 반환한다. 
	
- 조인 문법
    - ANSI 조인 문법
        - 표준 SQL 문법
        - 오라클은 9i 부터 지원.
    - 오라클 조인 문법
        - 오라클 전용 문법이며 다른 DBMS는 지원하지 않는다.   
	
- inner join : ANSI 조인 구문
	FROM  테이블a 별칭 INNER JOIN 테이블b 별칭 ON 조인조건 
	-> inner는 생략 할 수 있다.(생략되면 inner join하는 것이다.) 
	ex)
	select  e.emp_id,
        	e.emp_name,
        	e.hire_date,
        	d.dept_name
	from    emp e inner join dept d on e.dept_id = d.dept_id;
	-> PK와 FK의 연결은 '='로 join : equi join
	-> PK와 FK가 없는 연결은 '='로 join 하지 않음 : non-equi join
	   보통 between 조건 low 범위 and 조건 high 범위
	   ex) from    emp e join salary_grade s on e.salary between s.low_sal and s.high_sal
	
- 카티션 곱: join 연산을 잘못해서 두 테이블의 행들이 cross로 join된 것 (오라클 JOIN에서 주로 발생, ANSI JOIN에서는 cross join 키워드 존재)
   6개 Table -> join 연산 최소 5개
   -> N개 Table -> join 연산 최소 N-1개
	ex) select  *	
	    from    emp e, dept d
	    order by 1;
